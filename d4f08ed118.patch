From d4f08ed1180991a75e04de9a1b08e79b18b7faf7 Mon Sep 17 00:00:00 2001
From: idydiagne <idydiagne1999@gmail.com>
Date: Mon, 16 Jan 2023 18:44:45 +0000
Subject: [PATCH] second commit of quest 4 for iterativefactoriel

---
 atoi.go                      |  30 ------
 basicatoi.go                 |  13 ---
 basicatoi2.go                |  13 ---
 divmod.go                    |   6 --
 go.mod                       |   5 -
 go.sum                       |   2 -
 isnegative.go                |  12 ---
 my_answer.sh                 |   3 -
 pointone.go                  |   5 -
 printalphabet/main.go        |  33 -------
 printcomb.go                 |  19 ----
 printcomb2.go                |  20 ----
 printcombn.go                | 184 -----------------------------------
 printdigits/main.go          |  10 --
 printnbr.go                  |  30 ------
 printreversealphabet/main.go |  10 --
 printstr.go                  |  11 ---
 sortintegertable.go          |  12 ---
 strlen.go                    |   5 -
 strrev.go                    |  10 --
 swap.go                      |   7 --
 test/test.go                 |   7 --
 ultimatedivmod.go            |   8 --
 ultimatepointone.go          |   5 -
 24 files changed, 460 deletions(-)
 delete mode 100644 atoi.go
 delete mode 100644 basicatoi.go
 delete mode 100644 basicatoi2.go
 delete mode 100644 divmod.go
 delete mode 100644 go.mod
 delete mode 100644 go.sum
 delete mode 100644 isnegative.go
 delete mode 100644 my_answer.sh
 delete mode 100644 pointone.go
 delete mode 100644 printalphabet/main.go
 delete mode 100644 printcomb.go
 delete mode 100644 printcomb2.go
 delete mode 100644 printcombn.go
 delete mode 100644 printdigits/main.go
 delete mode 100644 printnbr.go
 delete mode 100644 printreversealphabet/main.go
 delete mode 100644 printstr.go
 delete mode 100644 sortintegertable.go
 delete mode 100644 strlen.go
 delete mode 100644 strrev.go
 delete mode 100644 swap.go
 delete mode 100644 test/test.go
 delete mode 100644 ultimatedivmod.go
 delete mode 100644 ultimatepointone.go

diff --git a/atoi.go b/atoi.go
deleted file mode 100644
index 325c264..0000000
--- a/atoi.go
+++ /dev/null
@@ -1,30 +0,0 @@
-package piscine
-
-func Atoi(s string) int {
-	var result int
-	var foundDigit bool
-	var sign int = 1 // Default sign is positive
-	var foundSign bool
-	for i, c := range s {
-		if c == '-' && !foundDigit && !foundSign {
-			sign = -1
-			foundSign = true
-		} else if c == '+' && !foundDigit && !foundSign {
-			sign = 1
-			foundSign = true
-		} else if c >= '0' && c <= '9' {
-			result = result*10 + int(c-'0')
-			foundDigit = true
-		} else if foundDigit {
-			for _, digit := range s[i:] {
-				if digit != ' ' {
-					return 0
-				}
-			}
-			return result * sign
-		} else if c != ' ' && !foundDigit {
-			return 0
-		}
-	}
-	return result * sign
-}
diff --git a/basicatoi.go b/basicatoi.go
deleted file mode 100644
index f054d18..0000000
--- a/basicatoi.go
+++ /dev/null
@@ -1,13 +0,0 @@
-package piscine
-
-func BasicAtoi(s string) int {
-	var result int
-	for _, c := range s {
-		if c >= '0' && c <= '9' {
-			result = result*10 + int(c-'0')
-		} else {
-			return 0
-		}
-	}
-	return result
-}
diff --git a/basicatoi2.go b/basicatoi2.go
deleted file mode 100644
index 5416838..0000000
--- a/basicatoi2.go
+++ /dev/null
@@ -1,13 +0,0 @@
-package piscine
-
-func BasicAtoi2(s string) int {
-	var result int
-	for _, c := range s {
-		if c >= '0' && c <= '9' {
-			result = result*10 + int(c-'0')
-		} else {
-			return 0
-		}
-	}
-	return result
-}
diff --git a/divmod.go b/divmod.go
deleted file mode 100644
index 852a2d9..0000000
--- a/divmod.go
+++ /dev/null
@@ -1,6 +0,0 @@
-package piscine
-
-func DivMod(a int, b int, div *int, mod *int) {
-	*div = a / b
-	*mod = a % b
-}
diff --git a/go.mod b/go.mod
deleted file mode 100644
index c3baca7..0000000
--- a/go.mod
+++ /dev/null
@@ -1,5 +0,0 @@
-module piscine
-
-go 1.18
-
-require github.com/01-edu/z01 v0.1.0
diff --git a/go.sum b/go.sum
deleted file mode 100644
index 5789f5c..0000000
--- a/go.sum
+++ /dev/null
@@ -1,2 +0,0 @@
-github.com/01-edu/z01 v0.1.0 h1:Rr1p92CKYXUgVFw872iGDABXpdkuKf2jmS+KV6r1034=
-github.com/01-edu/z01 v0.1.0/go.mod h1:BH7t35JaNFuP83rTJDc5nkSfgmC/HYVcJsUcdFqYZNo=
diff --git a/isnegative.go b/isnegative.go
deleted file mode 100644
index aba4378..0000000
--- a/isnegative.go
+++ /dev/null
@@ -1,12 +0,0 @@
-package piscine
-
-import "github.com/01-edu/z01"
-
-func IsNegative(nb int) {
-	if nb < 0 {
-		z01.PrintRune('T')
-	} else {
-		z01.PrintRune('F')
-	}
-	z01.PrintRune('\n')
-}
diff --git a/my_answer.sh b/my_answer.sh
deleted file mode 100644
index 4c5e4a3..0000000
--- a/my_answer.sh
+++ /dev/null
@@ -1,3 +0,0 @@
-#! .bin/bash
-
-echo 'Dartey Henv'
\ No newline at end of file
diff --git a/pointone.go b/pointone.go
deleted file mode 100644
index 6d935ef..0000000
--- a/pointone.go
+++ /dev/null
@@ -1,5 +0,0 @@
-package piscine
-
-func PointOne(n *int) {
-	*n = 1
-}
diff --git a/printalphabet/main.go b/printalphabet/main.go
deleted file mode 100644
index e8808c7..0000000
--- a/printalphabet/main.go
+++ /dev/null
@@ -1,33 +0,0 @@
-package main
-
-import "github.com/01-edu/z01"
-
-func main() {
-	z01.PrintRune('a')
-	z01.PrintRune('b')
-	z01.PrintRune('c')
-	z01.PrintRune('d')
-	z01.PrintRune('e')
-	z01.PrintRune('f')
-	z01.PrintRune('g')
-	z01.PrintRune('h')
-	z01.PrintRune('i')
-	z01.PrintRune('j')
-	z01.PrintRune('k')
-	z01.PrintRune('l')
-	z01.PrintRune('m')
-	z01.PrintRune('n')
-	z01.PrintRune('o')
-	z01.PrintRune('p')
-	z01.PrintRune('q')
-	z01.PrintRune('r')
-	z01.PrintRune('s')
-	z01.PrintRune('t')
-	z01.PrintRune('u')
-	z01.PrintRune('v')
-	z01.PrintRune('w')
-	z01.PrintRune('x')
-	z01.PrintRune('y')
-	z01.PrintRune('z')
-	z01.PrintRune('\n')
-}
diff --git a/printcomb.go b/printcomb.go
deleted file mode 100644
index e0561c8..0000000
--- a/printcomb.go
+++ /dev/null
@@ -1,19 +0,0 @@
-package piscine
-
-import "github.com/01-edu/z01"
-
-func PrintComb() {
-	for i := 0; i <= 7; i++ {
-		for j := 0; j <= 8; j++ {
-			for k := 0; k <= 9; k++ {
-				z01.PrintRune(rune(i) + 48)
-				z01.PrintRune(rune(j) + 48)
-				z01.PrintRune(rune(k) + 48)
-				if !(i == 7 && j == 8 && k == 9) {
-					z01.PrintRune(rune(32))
-					z01.PrintRune(rune(44))
-				}
-			}
-		}
-	}
-}
diff --git a/printcomb2.go b/printcomb2.go
deleted file mode 100644
index b9ef2de..0000000
--- a/printcomb2.go
+++ /dev/null
@@ -1,20 +0,0 @@
-package piscine
-
-import "github.com/01-edu/z01"
-
-func PrintComb2() {
-	for i := 0; i < 100; i++ {
-		for j := i + 1; j < 100; j++ {
-			z01.PrintRune(rune((i / 10) + 48))
-			z01.PrintRune(rune((i % 10) + 48))
-			z01.PrintRune(' ')
-			z01.PrintRune(rune((j / 10) + 48))
-			z01.PrintRune(rune((j % 10) + 48))
-			if i != 98 {
-				z01.PrintRune(',')
-				z01.PrintRune(' ')
-			}
-		}
-	}
-	z01.PrintRune(10)
-}
diff --git a/printcombn.go b/printcombn.go
deleted file mode 100644
index 2fe0933..0000000
--- a/printcombn.go
+++ /dev/null
@@ -1,184 +0,0 @@
-package piscine
-
-import "github.com/01-edu/z01"
-
-func PrintCombN(n int) {
-	switch n {
-	case 1:
-		for i := 0; i <= 9; i++ {
-			z01.PrintRune(rune(i) + 48)
-		}
-	case 2:
-		for i := 0; i <= 9; i++ {
-			for j := i + 1; j <= 9; j++ {
-				z01.PrintRune(rune(i) + 48)
-				z01.PrintRune(rune(j) + 48)
-				if i != 8 {
-					z01.PrintRune(44)
-					z01.PrintRune(32)
-				}
-			}
-		}
-	case 3:
-		for i := 0; i <= 9; i++ {
-			for j := i + 1; j <= 9; j++ {
-				for k := j + 1; k <= 9; k++ {
-					z01.PrintRune(rune(i) + 48)
-					z01.PrintRune(rune(j) + 48)
-					z01.PrintRune(rune(k) + 48)
-					if i != 7 {
-						z01.PrintRune(44)
-						z01.PrintRune(32)
-					}
-				}
-			}
-		}
-	case 4:
-		for i := 0; i <= 9; i++ {
-			for j := i + 1; j <= 9; j++ {
-				for k := j + 1; k <= 9; k++ {
-					for l := k + 1; l <= 9; l++ {
-						z01.PrintRune(rune(i) + 48)
-						z01.PrintRune(rune(j) + 48)
-						z01.PrintRune(rune(k) + 48)
-						z01.PrintRune(rune(l) + 48)
-						if i != 6 {
-							z01.PrintRune(44)
-							z01.PrintRune(32)
-						}
-					}
-				}
-			}
-		}
-	case 5:
-		for i := 0; i <= 9; i++ {
-			for j := i + 1; j <= 9; j++ {
-				for k := j + 1; k <= 9; k++ {
-					for l := k + 1; l <= 9; l++ {
-						for m := l + 1; m <= 9; m++ {
-							z01.PrintRune(rune(i) + 48)
-							z01.PrintRune(rune(j) + 48)
-							z01.PrintRune(rune(k) + 48)
-							z01.PrintRune(rune(l) + 48)
-							z01.PrintRune(rune(m) + 48)
-							if i != 5 {
-								z01.PrintRune(44)
-								z01.PrintRune(32)
-							}
-						}
-					}
-				}
-			}
-		}
-	case 6:
-		for i := 0; i <= 9; i++ {
-			for j := i + 1; j <= 9; j++ {
-				for k := j + 1; k <= 9; k++ {
-					for l := k + 1; l <= 9; l++ {
-						for m := l + 1; m <= 9; m++ {
-							for n := m + 1; n <= 9; n++ {
-								z01.PrintRune(rune(i) + 48)
-								z01.PrintRune(rune(j) + 48)
-								z01.PrintRune(rune(k) + 48)
-								z01.PrintRune(rune(l) + 48)
-								z01.PrintRune(rune(m) + 48)
-								z01.PrintRune(rune(n) + 48)
-								if i != 4 {
-									z01.PrintRune(44)
-									z01.PrintRune(32)
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-	case 7:
-		for i := 0; i <= 9; i++ {
-			for j := i + 1; j <= 9; j++ {
-				for k := j + 1; k <= 9; k++ {
-					for l := k + 1; l <= 9; l++ {
-						for m := l + 1; m <= 9; m++ {
-							for n := m + 1; n <= 9; n++ {
-								for o := n + 1; o <= 9; o++ {
-									z01.PrintRune(rune(i) + 48)
-									z01.PrintRune(rune(j) + 48)
-									z01.PrintRune(rune(k) + 48)
-									z01.PrintRune(rune(l) + 48)
-									z01.PrintRune(rune(m) + 48)
-									z01.PrintRune(rune(n) + 48)
-									z01.PrintRune(rune(o) + 48)
-									if i != 3 {
-										z01.PrintRune(44)
-										z01.PrintRune(32)
-									}
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-	case 8:
-		for i := 0; i <= 9; i++ {
-			for j := i + 1; j <= 9; j++ {
-				for k := j + 1; k <= 9; k++ {
-					for l := k + 1; l <= 9; l++ {
-						for m := l + 1; m <= 9; m++ {
-							for n := m + 1; n <= 9; n++ {
-								for o := n + 1; o <= 9; o++ {
-									for p := o + 1; p <= 9; p++ {
-										z01.PrintRune(rune(i) + 48)
-										z01.PrintRune(rune(j) + 48)
-										z01.PrintRune(rune(k) + 48)
-										z01.PrintRune(rune(l) + 48)
-										z01.PrintRune(rune(m) + 48)
-										z01.PrintRune(rune(n) + 48)
-										z01.PrintRune(rune(o) + 48)
-										z01.PrintRune(rune(p) + 48)
-										if i != 2 {
-											z01.PrintRune(44)
-											z01.PrintRune(32)
-										}
-									}
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-	case 9:
-		for i := 0; i <= 9; i++ {
-			for j := i + 1; j <= 9; j++ {
-				for k := j + 1; k <= 9; k++ {
-					for l := k + 1; l <= 9; l++ {
-						for m := l + 1; m <= 9; m++ {
-							for n := m + 1; n <= 9; n++ {
-								for o := n + 1; o <= 9; o++ {
-									for p := o + 1; p <= 9; p++ {
-										for q := p + 1; q <= 9; q++ {
-											z01.PrintRune(rune(i) + 48)
-											z01.PrintRune(rune(j) + 48)
-											z01.PrintRune(rune(k) + 48)
-											z01.PrintRune(rune(l) + 48)
-											z01.PrintRune(rune(m) + 48)
-											z01.PrintRune(rune(n) + 48)
-											z01.PrintRune(rune(o) + 48)
-											z01.PrintRune(rune(p) + 48)
-											z01.PrintRune(rune(q) + 48)
-											if i != 1 {
-												z01.PrintRune(44)
-												z01.PrintRune(32)
-											}
-										}
-									}
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-	}
-}
diff --git a/printdigits/main.go b/printdigits/main.go
deleted file mode 100644
index e2df9aa..0000000
--- a/printdigits/main.go
+++ /dev/null
@@ -1,10 +0,0 @@
-package main
-
-import "github.com/01-edu/z01"
-
-func main() {
-	for i := '0'; i <= '9'; i++ {
-		z01.PrintRune(i)
-	}
-	z01.PrintRune('\n')
-}
diff --git a/printnbr.go b/printnbr.go
deleted file mode 100644
index f208f65..0000000
--- a/printnbr.go
+++ /dev/null
@@ -1,30 +0,0 @@
-package piscine
-
-import (
-	"github.com/01-edu/z01"
-)
-
-func PrintNbr(n int) {
-	// if n < 0 {
-	// 	z01.PrintRune('-')
-	// 	n = -n
-	// }
-
-	// if n == 0 {
-	// 	z01.PrintRune('0')
-	// }
-	j := 1
-	if n < 0 {
-		z01.PrintRune('-')
-		j = -1
-	}
-
-	if n != 0 {
-		quotient := (n / 10) * j
-		if quotient != 0 {
-			PrintNbr(quotient)
-		}
-	}
-	reste := (n % 10) * j
-	z01.PrintRune(rune(reste) + 48)
-}
diff --git a/printreversealphabet/main.go b/printreversealphabet/main.go
deleted file mode 100644
index eeee47e..0000000
--- a/printreversealphabet/main.go
+++ /dev/null
@@ -1,10 +0,0 @@
-package main
-
-import "github.com/01-edu/z01"
-
-func main() {
-	for i := 'z'; i >= 'a'; i-- {
-		z01.PrintRune(i)
-	}
-	z01.PrintRune('\n')
-}
diff --git a/printstr.go b/printstr.go
deleted file mode 100644
index f716629..0000000
--- a/printstr.go
+++ /dev/null
@@ -1,11 +0,0 @@
-package piscine
-
-import "github.com/01-edu/z01"
-
-func PrintStr(s string) {
-	for i := 0; i <= len(s)-1; i++ {
-		// fmt.Println(string(s[i]))
-		z01.PrintRune(rune(s[i]))
-		// z01.PrintRune(rune(10))
-	}
-}
diff --git a/sortintegertable.go b/sortintegertable.go
deleted file mode 100644
index e8f039f..0000000
--- a/sortintegertable.go
+++ /dev/null
@@ -1,12 +0,0 @@
-package piscine
-
-func SortIntegerTable(table []int) {
-	n := len(table)
-	for i := 0; i < n-1; i++ {
-		for j := 0; j < n-i-1; j++ {
-			if table[j] > table[j+1] {
-				table[j], table[j+1] = table[j+1], table[j]
-			}
-		}
-	}
-}
diff --git a/strlen.go b/strlen.go
deleted file mode 100644
index 8949480..0000000
--- a/strlen.go
+++ /dev/null
@@ -1,5 +0,0 @@
-package piscine
-
-func StrLen(s string) int {
-	return len([]rune(s))
-}
diff --git a/strrev.go b/strrev.go
deleted file mode 100644
index e16128f..0000000
--- a/strrev.go
+++ /dev/null
@@ -1,10 +0,0 @@
-package piscine
-
-func StrRev(s string) string {
-	a := []rune(s)
-	// return string(a)
-	for i, j := 0, len(a)-1; i < j; i, j = i+1, j-1 {
-		a[i], a[j] = a[j], a[i]
-	}
-	return string(a)
-}
diff --git a/swap.go b/swap.go
deleted file mode 100644
index ef578bc..0000000
--- a/swap.go
+++ /dev/null
@@ -1,7 +0,0 @@
-package piscine
-
-func Swap(a *int, b *int) {
-	temp := *a
-	*a = *b
-	*b = temp
-}
diff --git a/test/test.go b/test/test.go
deleted file mode 100644
index aedab3a..0000000
--- a/test/test.go
+++ /dev/null
@@ -1,7 +0,0 @@
-package main
-
-import "piscine"
-
-func main() {
-	piscine.QuadE(5,3)
-}
\ No newline at end of file
diff --git a/ultimatedivmod.go b/ultimatedivmod.go
deleted file mode 100644
index aba80b4..0000000
--- a/ultimatedivmod.go
+++ /dev/null
@@ -1,8 +0,0 @@
-package piscine
-
-func UltimateDivMod(a *int, b *int) {
-	div := *a / *b
-	mod := *a % *b
-	*a = div
-	*b = mod
-}
diff --git a/ultimatepointone.go b/ultimatepointone.go
deleted file mode 100644
index eaeda37..0000000
--- a/ultimatepointone.go
+++ /dev/null
@@ -1,5 +0,0 @@
-package piscine
-
-func UltimatePointOne(n ***int) {
-	***n = 1
-}
